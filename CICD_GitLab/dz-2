image: docker:latest
services:
  - docker:dind
variables:
  IMAGE_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA

cache:
  key:
    files:
      - composer.lock
  paths:
    - vendor/

before_script:
  - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
  - echo user $GITLAB_CI_USER password $GOTLAB_CI_PASSWORD registry $CI_REGISTRY


stages:
  - build
  - test
  - deploy

#before_script:
#  - echo "Before script section"
#  - echo "For example you might run an update here or install a build dependency"
#  - echo "Or perhaps you might print out some debugging details"

#after_script:
#  - echo "After script section"
#  - echo "For example you might do some cleanup here"

build1:
  stage: build
  script:
    - mkdir -p vendor/
    - echo "build" > vendor/hello.txt
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
    
test1:
  stage: test
  script:
    - cat vendor/hello.txt
    - docker run -d --name test $CI_REGISTRY_IMAGE:$IMAGE_TAG
    #- docker exec test cat README.md
    - docker ps > vendor/chckrundocker.txt 
    - grep 'Up' vendor/chckrundocker.txt; if [ $? -eq 0 ]; then echo "Container running"; else echo "Container not running"; fi

deploy1:
  stage: deploy
  script:
    - echo "Do your deploy here"

